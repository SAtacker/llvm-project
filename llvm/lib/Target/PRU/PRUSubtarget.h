#ifndef PRUSUBTARGET_H_INCLUDED
#define PRUSUBTARGET_H_INCLUDED

#include "PRUFrameLowering.h"
#include "PRUISelLowering.h"
#include "PRUInstrInfo.h"
#include "PRUSelectionDAGInfo.h"
#include "llvm/ADT/Triple.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/MC/MCInstrItineraries.h"
#include "llvm/Support/CommandLine.h"
#include "llvm/Support/ErrorHandling.h"
#include "llvm/BinaryFormat/ELF.h"

#define GET_SUBTARGETINFO_HEADER
#include "PRUGenSubtargetInfo.inc"

#define DEBUG_TYPE "PRU-subtarget"

namespace llvm {

class PRUSubtarget : public PRUGenSubtargetInfo {

  private:
  PRUInstrInfo InstrInfo;
  PRUFrameLowering FrameLowering;
  PRUTargetLowering TLInfo;
  PRUSelectionDAGInfo TSInfo;

  unsigned ELFArch = 0;

  // Dummy member, used by FeatureSet's. We cannot have a SubtargetFeature with
  // no variable, so we instead bind pseudo features to this variable.
  bool m_FeatureSetDummy = false;
  
  public:
  PRUSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
               const PRUTargetMachine &TM);
  virtual ~PRUSubtarget() = default;

  const PRUInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const PRUTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
  const PRURegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }


  // This member function will be generated by tablegen
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  PRUSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS,
                                                const TargetMachine &TM);
};

} // namespace llvm

#endif

